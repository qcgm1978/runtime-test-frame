// Generated by CoffeeScript 1.6.3
/* source:
wiki:http://en.wikipedia.org/wiki/List_of_cognitive_biases
wiki-Chinese: http://zh.m.wikipedia.org/wiki/%E8%AA%8D%E7%9F%A5%E5%81%8F%E8%A6%8B
*/


(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  describe('Cognitive biases are tendencies to think in certain ways', function() {
    return it('toEqual use == instead of === when two primitive val', function() {
      expect({
        a: 1
      } === {
        a: 1
      }).toBeFalsy();
      expect({
        a: 1
      }).toEqual({
        a: 1
      });
      return expect(null).toEqual(void 0);
    });
  });

  describe('Von Restorff effect', function() {
    it('That an item that sticks out is more likely to be remembered than other items', function() {
      var a;
      a = 0;
      expect(judgeExpression.bind('null', a === 0)).not.toThrow();
      a = 1;
      return expect(judgeExpression.bind('null', a === 0)).toThrow();
    });
    return it(' you could just write all your code within a self-invoking, anonymous function', function() {
      return (function() {
        var a;
        a = 0;
        return expect(judgeExpression.bind('null', a === 0)).not.toThrow();
      })();
    });
  });

  describe('Confirmation bias ', function() {
    it("The tendency to search for, interpret, focus on and remember information in a way that confirms one's preconceptions", function() {
      expect(1).toEqual(1);
      expect(wrapJudgeExpression(1=='1')).not.toThrow();
      return expect(wrapJudgeExpression(0=='')).not.toThrow();
    });
    it("The solution here is to use ===", function() {
      expect(wrapJudgeExpression(1==='1')).toThrow();
      return expect(wrapJudgeExpression(0==='')).toThrow();
    });
    return it("for in loop will include properties and methods from further up the prototype chain", function() {
      var Child, Parent, arr, child, prop, val;
      Parent = (function() {
        function Parent() {
          this.surname = 'Bryant';
        }

        return Parent;

      })();
      Child = (function(_super) {
        __extends(Child, _super);

        function Child() {
          this.name = 'Kobe';
        }

        return Child;

      })(Parent);
      child = new Child();
      arr = [];
      for (prop in child) {
        val = child[prop];
        arr.push(val);
      }
      expect(wrapJudgeExpression(arr.length === 1)).toThrow();
      expect(arr.length).toEqual(2);
      arr = [];
      for (prop in child) {
        if (!__hasProp.call(child, prop)) continue;
        val = child[prop];
        arr.push(val);
      }
      expect(wrapJudgeExpression(arr.length === 1)).not.toThrow();
      return expect(arr).toEqual(['Kobe']);
    });
  });

  describe('Endowment effect', function() {
    return it("In behavioral economics, the endowment effect (also known as divestiture aversion) is the hypothesis that people ascribe more value to things merely because they own them.", function() {
      var a, b;
      a = 0;
      b = new Number(0);
      expect(a).toEqual(b);
      expect(typeof a).toNotEqual(typeof b);
      expect(typeof a).toEqual('number');
      return expect(typeof b).toEqual('object');
    });
  });

  describe("Forer effect or Barnum effect", function() {
    return it("The observation that individuals will give high accuracy ratings to descriptions of their personality that supposedly are tailored specifically for them, but are in fact vague and general enough to apply to a wide range of people.", function() {
      expect(wrapJudgeExpression(43 === parseInt(043))).toThrow();
      return expect(wrapJudgeExpression(43 === parseInt('043', 10))).not.toThrow();
    });
  });

  describe("Texas sharpshooter fallacy", function() {
    return it("The Texas sharpshooter fallacy is an informal fallacy which is committed when differences in data are ignored, but similarities are stressed. ", function() {});
  });

  describe('Stereotype', function() {
    return it("A stereotype is a thought that may be adopted about specific types of individuals or certain ways of doing things,.", function() {
      var u;
      u = 123;
      (function() {
        u = typeof u === "undefined";
        expect(wrapJudgeExpression(u === true)).toThrow();
        return expect(u).toBeFalsy();
      })();
      expect(wrapJudgeExpression(u === true)).toThrow();
      return expect(u).toBeFalsy();
    });
  });

  describe('False consensus effect', function() {
    return it("The tendency for people to overestimate the degree to which others agree with them", function() {
      var arr, i, obj, prop;
      obj = {
        p: void 0
      };
      arr = [];
      for (prop in obj) {
        i = obj[prop];
        arr.push(i);
      }
      expect(arr).toEqual([void 0]);
      return expect(wrapJudgeExpression(arr.length === 1)).not.toThrow();
    });
  });

}).call(this);

/*
//@ sourceMappingURL=cognitive-biases.map
*/
